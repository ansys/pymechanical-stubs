name: GitHub CI - Wheelhouse Only
on:
  workflow_dispatch:

env:
  PYMECHANICAL_PORT: 10000  # default won't work on GitHub runners
  PYMECHANICAL_START_INSTANCE: FALSE
  DOCKER_PACKAGE: ghcr.io/ansys/mechanical
  DOCKER_IMAGE_VERSION: 23.2.0
  DOCKER_MECH_CONTAINER_NAME: mechanical
  MAIN_PYTHON_VERSION: '3.10'
  PACKAGE_NAME: ansys-mechanical-stubs
  PACKAGE_NAMESPACE: ansys.mechanical.stubs
  DOCUMENTATION_CNAME: scripting.mechanical.docs.pyansys.com
  LICENSE_SERVER: ${{ secrets.LICENSE_SERVER }}
  ANSYSLMD_LICENSE_FILE: 1055@${{ secrets.LICENSE_SERVER }}
  ANSYS_WORKBENCH_LOGGING_CONSOLE: 0
  ANSYS_WORKBENCH_LOGGING: 0
  ANSYS_WORKBENCH_LOGGING_FILTER_LEVEL: 2
  NUM_CORES: 1


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys code style checks
        uses: ansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  gen-wheelhouse:
    name: Create wheelhouse files
    needs: [style]
    runs-on: ${{ matrix.os }}
    container:
      image: ghcr.io/ansys/mechanical:${{ matrix.versions.image }}
      options: --entrypoint /bin/bash
    strategy:
      matrix:
        os: [ubuntu-latest]
        versions: [
          { image: '23.2.0', version: '232' },
          { image: '24.1.0', version: '241' }
        ]
        python-version: ['3.10'] #, '3.11', '3.12']
    steps:
      - name: Install Git and checkout project
        uses: actions/checkout@v3

      - name: Install dependencies
        env:
          AWP_ROOTDV_DEV: /install/ansys_inc/v${{ matrix.versions.version }}
          ANSYSCL${{ matrix.versions.version }}_DIR: /install/ansys_inc/v${{ matrix.versions.version }}/licensingclient
        run: |
          apt update
          apt install --reinstall ca-certificates
          apt install software-properties-common -y
          add-apt-repository ppa:deadsnakes/ppa -y
          apt install python${{ matrix.python-version }} -y
          ln -s /usr/bin/python${{ matrix.python-version }} /usr/bin/python
          apt install python${{ matrix.python-version }}-venv -y
          python -m ensurepip --default-pip
          pip install --upgrade pip
          python --version
          pip --version

          apt update
          apt install -y lsb-release
          apt install -y mono-complete
          apt install -y make
          apt-get install -y zip
          pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org pip setuptools
          pip install --upgrade pip flit pytz tzdata ansys-pythonnet

          mkdir -p src/ansys/mechanical/stubs
          touch src/ansys/mechanical/stubs/__init__.py
          pip install . 2> results.txt
        continue-on-error: True

      - name: Check stubs were generated
        run: |
          cat results.txt

          # Check if failure occurred
          output=$(grep -c "Done processing all mechanical stubs" results.txt)
          if [ $output -eq 1 ]; then
            echo "All mechanical stubs were created"
            exit 0
          else
            echo "There was an issue creating the mechanical stubs"
            exit 1
          fi

      - name: Retrieve Mechanial version
        run: |
          pip install -e .
          echo "MECHANICAL_VERSION=$(python -c 'from ansys.mechanical.stubs import __version__; print(__version__)')" >> $GITHUB_ENV
          echo "Mechanical version is: $(python -c "from ansys.mechanical.stubs import __version__; print(__version__)")"

      - name: Install build and twine, and build dist artifacts
        env:
          AWP_ROOTDV_DEV: /install/ansys_inc/v${{ matrix.versions.version }}
          ANSYSCL${{ matrix.versions.version }}_DIR: /install/ansys_inc/v${{ matrix.versions.version }}/licensingclient
        run: |
          # This and the next step are the same as the build-library action
          python -m pip install build twine
          python -m build 2> build_results.txt
          python -m twine check dist/*
        continue-on-error: True

      - name: "Upload distribution artifacts to GitHub artifacts"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}-artifacts-v${{ matrix.versions.version }}
          path: dist/
          retention-days: 7

      - name: Install package and create wheelhouse
        env:
          AWP_ROOTDV_DEV: /install/ansys_inc/v${{ matrix.versions.version }}
          ANSYSCL${{ matrix.versions.version }}_DIR: /install/ansys_inc/v${{ matrix.versions.version }}/licensingclient
        run: |
          python -m pip install -e .
          python -m pip install importlib-metadata
          python -m pip wheel . -w wheelhouse 2> wheel_results.txt
        continue-on-error: True

      - name: "Compress the wheelhouse"
        uses: vimtor/action-zip@v1.1
        with:
          files: wheelhouse
          dest: ${{ env.PACKAGE_NAME }}-v${{ env.MECHANICAL_VERSION }}-wheelhouse-${{ matrix.os }}-${{ matrix.python-version }}.zip

      - name: "Upload the wheelhouse files"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}-v${{ env.MECHANICAL_VERSION }}-wheelhouse-${{ matrix.os }}-${{ matrix.python-version }}
          path: wheelhouse/*
          retention-days: 7
