name: >
  Set up Mechanical stubs

description: |
  Downloads the Mechanical stubs __init__.py files to the repository and creates
  the __init__.py file for all versions of Mechanical stubs.

inputs:

  # Required inputs
  folder-pattern:
    description: >
      Pattern of the folder to download. For example, "v[0-9][0-9][0-9]-3.12"
    required: true
    type: string

  package-path:
    description: >
      Path to where the package is located. For example, src/ansys/mechanical/stubs
    required: true
    type: string

  python-version:
    description: >
      Python version in the folder pattern. For example, 3.10
    required: true
    type: string

runs:
  using: "composite"
  steps:

    - uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Get cwd
      shell: python
      run: |
        import os

        print(os.getcwd())

    - name: Download the library artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: ${{ inputs.folder-pattern }}
        path: ${{ inputs.package-path }}/

    - name: Rename folders
      shell: python
      run: |
        import os

        for dirpath, dirnames, filenames in os.walk("${{ inputs.package-path }}"):
          for dir in dirnames:
              original_dir = os.path.join(dirpath, dir)
              new_dir = dir.replace("-${{ inputs.python-version }}", "")
              renamed_dir = os.path.join(dirpath, new_dir)
              os.rename(original_dir, renamed_dir)

        mechanical_versions = ["241", "242", "251", "252"]
        for version in mechanical_versions:
            if not os.path.exists(f"${{ inputs.package-path }}/v{version}"):
                os.makedirs(f"${{ inputs.package-path }}/v{version}")
                with open(f"${{ inputs.package-path }}/v{version}/__init__.py", "w") as f:
                    f.write(f'"""Ansys Mechanical v{version} module."""\n')
                    f.write(f'import ansys.mechanical.stubs.v{version}.Ansys as Ansys\n')

    - name: Create __init__.py in ${{ inputs.package-path }}
      shell: python
      run: |
        import os

        subfolders = [ f.name for f in os.scandir("${{ inputs.package-path }}/") if f.is_dir() ]

        with open("${{ inputs.package-path }}/__init__.py", "w") as f:
            f.write('''try:
            import importlib.metadata as importlib_metadata
        except ModuleNotFoundError:  # pragma: no cover
            import importlib_metadata  # type: ignore

        __version__ = importlib_metadata.version("ansys-mechanical-stubs")
        """Patch version for the ansys-mechanical-stubs package."""\n\n''')

            for folder in subfolders:
                if "v" in folder:
                    f.write(f"from .{folder} import *\n")
                    f.write('"""Mechanical installation version."""\n')
