.. vale off



:class:`MemberSizeManufacturingConstraint`
==========================================

.. py:class:: ansys.mechanical.stubs.v252.Ansys.ACT.Automation.Mechanical.MemberSizeManufacturingConstraint

   Bases: :py:obj:`object`


   
   Defines a MemberSizeManufacturingConstraint.
















   ..
       !! processed by numpydoc !!


.. py:currentmodule:: MemberSizeManufacturingConstraint

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~Activate`
            - Activate the current object.
          * - :py:attr:`~CopyTo`
            - Copies all visible properties from this object to another.
          * - :py:attr:`~CreateParameter`
            - Creates a new parameter for a Property.
          * - :py:attr:`~Delete`
            - Run the Delete action.
          * - :py:attr:`~Duplicate`
            - Creates a copy of the current DataModelObject.
          * - :py:attr:`~GetChildren`
            - Gets the list of children, filtered by type.
          * - :py:attr:`~GetParameter`
            - Gets the parameter corresponding to the given property.
          * - :py:attr:`~GroupAllSimilarChildren`
            - Run the GroupAllSimilarChildren action.
          * - :py:attr:`~GroupSimilarObjects`
            - Run the GroupSimilarObjects action.
          * - :py:attr:`~PropertyByAPIName`
            - Get a property by its API name.
          * - :py:attr:`~PropertyByName`
            - Get a property by its unique name.
          * - :py:attr:`~RemoveParameter`
            - Removes the parameter from the parameter set corresponding to the given property.
          * - :py:attr:`~RenameBasedOnDefinition`
            - Run the RenameBasedOnDefinition action.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~Children`
            - Gets the list of children.
          * - :py:attr:`~CoordinateSystemForThicknessMeasure`
            - Gets or sets the Coordinate system used as the basis for measurements (only used when `ThicknessMeasureType` is `InPlane`).
          * - :py:attr:`~DataModelObjectCategory`
            - Gets the current DataModelObject's category.
          * - :py:attr:`~GapSize`
            - Gets or sets the GapSize.
          * - :py:attr:`~GapSizeControlledType`
            - Gets or sets the GapSizeControlledType.
          * - :py:attr:`~InternalObject`
            - Gets the internal object. For advanced usage only.
          * - :py:attr:`~Location`
            - Gets or sets the Location.
          * - :py:attr:`~MaxSize`
            - Gets or sets the MaxSize.
          * - :py:attr:`~Maximum`
            - Gets or sets the Maximum.
          * - :py:attr:`~MinSize`
            - Gets or sets the MinSize.
          * - :py:attr:`~Minimum`
            - Gets or sets the Minimum.
          * - :py:attr:`~NormalAxisForInPlaneMeasure`
            - Gets or sets the normal axis to plane considered for InPlane measurement type. Only positive direction enums will be accepted ("PositiveXAxis", "PositiveYAxis", "PositiveXAxis").
          * - :py:attr:`~Properties`
            - Gets the list of properties for this object.
          * - :py:attr:`~ScopingMethod`
            - Gets or sets the ScopingMethod.
          * - :py:attr:`~Selection`
            - Gets or sets the Selection.
          * - :py:attr:`~Suppressed`
            - Gets or sets the Suppressed.
          * - :py:attr:`~ThicknessMeasureType`
            - Gets or sets the thickness measurement type (applicable for the MaxSize and GapSize properties). The default type is Isotropic.
          * - :py:attr:`~VisibleProperties`
            - Gets the list of properties that are visible for this object.







Property detail
---------------
.. py:property:: Children
   :type: Optional[List[Ansys.Mechanical.DataModel.Interfaces.IDataModelObject]]


   
   Gets the list of children.
















   ..
       !! processed by numpydoc !!

.. py:property:: CoordinateSystemForThicknessMeasure
   :type: Optional[Ansys.ACT.Automation.Mechanical.CoordinateSystem]


   
   Gets or sets the Coordinate system used as the basis for measurements (only used when `ThicknessMeasureType` is `InPlane`).
















   ..
       !! processed by numpydoc !!

.. py:property:: DataModelObjectCategory
   :type: Optional[Ansys.Mechanical.DataModel.Enums.DataModelObjectCategory]


   
   Gets the current DataModelObject's category.
















   ..
       !! processed by numpydoc !!

.. py:property:: GapSize
   :type: Optional[Ansys.Core.Units.Quantity]


   
   Gets or sets the GapSize.
















   ..
       !! processed by numpydoc !!

.. py:property:: GapSizeControlledType
   :type: Optional[Ansys.Mechanical.DataModel.Enums.ManuMemberSizeControlledType]


   
   Gets or sets the GapSizeControlledType.
















   ..
       !! processed by numpydoc !!

.. py:property:: InternalObject
   :type: Optional[Ansys.Common.Interop.DSObjectsAuto.IDSTopoConstraintAuto]


   
   Gets the internal object. For advanced usage only.
















   ..
       !! processed by numpydoc !!

.. py:property:: Location
   :type: Optional[Ansys.ACT.Interfaces.Common.ISelectionInfo]


   
   Gets or sets the Location.
















   ..
       !! processed by numpydoc !!

.. py:property:: MaxSize
   :type: Optional[Ansys.Core.Units.Quantity]


   
   Gets or sets the MaxSize.
















   ..
       !! processed by numpydoc !!

.. py:property:: Maximum
   :type: Optional[Ansys.Mechanical.DataModel.Enums.ManuMemberSizeControlledType]


   
   Gets or sets the Maximum.
















   ..
       !! processed by numpydoc !!

.. py:property:: MinSize
   :type: Optional[Ansys.Core.Units.Quantity]


   
   Gets or sets the MinSize.
















   ..
       !! processed by numpydoc !!

.. py:property:: Minimum
   :type: Optional[Ansys.Mechanical.DataModel.Enums.ManuMemberSizeControlledType]


   
   Gets or sets the Minimum.
















   ..
       !! processed by numpydoc !!

.. py:property:: NormalAxisForInPlaneMeasure
   :type: Optional[Ansys.Mechanical.DataModel.Enums.CoordinateSystemAxisType]


   
   Gets or sets the normal axis to plane considered for InPlane measurement type. Only positive direction enums will be accepted ("PositiveXAxis", "PositiveYAxis", "PositiveXAxis"). 
       InvalidArgumentException: Any unsupported enum value.
















   ..
       !! processed by numpydoc !!

.. py:property:: Properties
   :type: Optional[tuple[Ansys.ACT.Automation.Mechanical.Property]]


   
   Gets the list of properties for this object.
















   ..
       !! processed by numpydoc !!

.. py:property:: ScopingMethod
   :type: Optional[Ansys.Mechanical.DataModel.Enums.GeometryDefineByType]


   
   Gets or sets the ScopingMethod.
















   ..
       !! processed by numpydoc !!

.. py:property:: Selection
   :type: Optional[Ansys.ACT.Automation.Mechanical.OptimizationRegion]


   
   Gets or sets the Selection.
















   ..
       !! processed by numpydoc !!

.. py:property:: Suppressed
   :type: Optional[bool]


   
   Gets or sets the Suppressed.
















   ..
       !! processed by numpydoc !!

.. py:property:: ThicknessMeasureType
   :type: Optional[Ansys.Mechanical.DataModel.Enums.MemberSizeMeasurementType]


   
   Gets or sets the thickness measurement type (applicable for the MaxSize and GapSize properties). The default type is Isotropic.
















   ..
       !! processed by numpydoc !!

.. py:property:: VisibleProperties
   :type: Optional[tuple[Ansys.ACT.Automation.Mechanical.Property]]


   
   Gets the list of properties that are visible for this object.
















   ..
       !! processed by numpydoc !!





Method detail
-------------
.. py:method:: Activate() -> None

   
   Activate the current object.

   ..
       !! processed by numpydoc !!

.. py:method:: CopyTo(other: Ansys.ACT.Automation.Mechanical.DataModelObject) -> None

   
   Copies all visible properties from this object to another.

   ..
       !! processed by numpydoc !!

.. py:method:: CreateParameter(propName: str) -> Ansys.ACT.Interfaces.Mechanical.IParameter

   
   Creates a new parameter for a Property.

   ..
       !! processed by numpydoc !!

.. py:method:: Delete() -> None

   
   Run the Delete action.

   ..
       !! processed by numpydoc !!

.. py:method:: Duplicate() -> Ansys.Mechanical.DataModel.Interfaces.IDataModelObject

   
   Creates a copy of the current DataModelObject.

   ..
       !! processed by numpydoc !!

.. py:method:: GetChildren(recurses: bool, children: List[ChildrenType]) -> List[ChildrenType]

   
   Gets the list of children, filtered by type.

   ..
       !! processed by numpydoc !!

.. py:method:: GetParameter(propName: str) -> Ansys.ACT.Interfaces.Mechanical.IParameter

   
   Gets the parameter corresponding to the given property.

   ..
       !! processed by numpydoc !!

.. py:method:: GroupAllSimilarChildren() -> None

   
   Run the GroupAllSimilarChildren action.

   ..
       !! processed by numpydoc !!

.. py:method:: GroupSimilarObjects() -> Ansys.ACT.Automation.Mechanical.TreeGroupingFolder

   
   Run the GroupSimilarObjects action.

   ..
       !! processed by numpydoc !!

.. py:method:: PropertyByAPIName(name: str) -> Ansys.ACT.Automation.Mechanical.Property

.. code-block:: text

   Get a property by its API name.
   If multiple properties have the same API Name, only the first property with that name will be returned.

..
       !! processed by numpydoc !!

.. py:method:: PropertyByName(name: str) -> Ansys.ACT.Automation.Mechanical.Property

   
   Get a property by its unique name.

   ..
       !! processed by numpydoc !!

.. py:method:: RemoveParameter(propName: str) -> None

   
   Removes the parameter from the parameter set corresponding to the given property.

   ..
       !! processed by numpydoc !!

.. py:method:: RenameBasedOnDefinition() -> None

   
   Run the RenameBasedOnDefinition action.

   ..
       !! processed by numpydoc !!



.. vale on