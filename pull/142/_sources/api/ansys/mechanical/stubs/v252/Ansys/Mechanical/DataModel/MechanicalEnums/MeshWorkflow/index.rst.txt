.. vale off








``MeshWorkflow``
================================


.. py:module:: ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow


Summary
-------


























































.. py:currentmodule:: MeshWorkflow
.. tab-set::





    .. tab-item:: Enums

        .. list-table::
          :header-rows: 0
          :widths: auto


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.CheckpointDefinitionType`
            - To select the MeshWorkflow Process Entity Type.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.ControlDataDefinedByType`
            - This enum is referenced in the 'Control' tree node and reflects the type of the definition for the control data of the specific control.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.ControlType`
            - To select the mesh workflow control type.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.DataTransferType`
            - This enum is referenced in the "Output" tree node and defines how the generated Mesh Workflow data should be transferred back into Mechanical geometry part(s) together with the associated mesh.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.DecompositionType`
            - This enum is referenced in MultiZone mesher controls. It specifies the decomposition type used to generate the MultiZone mesh.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.DefeatureToleranceDefineBy`
            - This enum is referenced in MultiZone mesher controls. It specifies how the MultiZone Defeature Tolerance is defined.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.FreeFaceMeshType`
            - This enum is referenced in MultiZone mesher controls. It specifies the element type for the MultiZone free face mesh.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.FreeVolumeMeshType`
            - This enum is referenced in MultiZone mesher controls. It specifies how free blocks are treated by the MultiZone meshing algorithm.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.HemisphereCenterDefinitionType`
            - This enum is referenced in the 'Control' tree node and reflects the type of hemisphere center modality being configured. Based on the type of an hemisphere center modality different rules are applied which define the applicable list of modality data to be used for creating a hemispherical enclosure.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.HemisphereOrientationDefinitionType`
            - This enum is referenced in the 'Control' tree node and reflects the type of hemisphere orientation modality being configured.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.MaterialPointDefineByType`
            - This enum is referenced in Material Point controls. It specifies how the material point location is defined.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.MaterialPointType`
            - To select the MeshWorkflow Surface Scope Modality Type.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.MergeNodesToleranceType`
            - This enum specifies the merge nodes tolerance type to be used when executing Merge Nodes operation.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.MeshFlowControl`
            - This enum is referenced in the 'Control' tree node and reflects the mesh flow control being configured.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.OperationType`
            - This enum is referenced in the “Step” tree node and reflects the type of operation being configured. Based on the type of an operation different rules are applied which define the applicable list of controls and outcomes which can be added.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.OutcomeType`
            - This enum is referenced in the “Outcome” tree node and reflects the type of outcome being configured. Based on the type of an outcome different rules are applied which define the applicable list of outcome data to be used.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.ScopeDefinedByType`
            - This enum is referenced in the 'Control' tree node and reflects how a scope is being defined. Based on the type of a scope definition different rules are applied which define the applicable list of scope definitions to be used.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.ScopeType`
            - To select the MeshWorkflow Process Entity Type.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.SettingsType`
            - A SettingsType allows the user to add the additional specific Settings type entries to the Steps. The additional entries can be set by the user to automatically define the attributes of different operation Controls.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.SphereCenterDefinitionType`
            - This enum is referenced in the 'Control' tree node and reflects the type of sphere center modality being configured. Based on the type of an sphere center modality different rules are applied which define the applicable list of modality data to be used for creating a spherical enclosure.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.SurfaceMeshType`
            - This enum is referenced in the 'Control' tree node and reflects the type of surface mesh being configured.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.TriangleCountReductionMode`
            - This enum is referenced in the 'Control' tree node and reflects the mode of triangle count reduction during surface meshing.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.VolumeMeshType`
            - This enum is referenced in the 'Control' tree node and reflects the type of volume mesh being configured.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.WorkflowType`
            - This enum is referenced in the “Steps” tree node and reflects the type of workflow being configured. Based on the type of workflow different rules are applied which define the applicable order and type of operations which can be added.


          * - :py:obj:`~ansys.mechanical.stubs.v252.Ansys.Mechanical.DataModel.MechanicalEnums.MeshWorkflow.WrapperRegionType`
            - This enum is referenced in the 'Control' tree node and reflects the type of wrapper region being configured.












.. toctree::
   :titlesonly:
   :maxdepth: 1
   :hidden:

    <span class="nf nf-cod-symbol_enum"></span> CheckpointDefinitionType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/CheckpointDefinitionType>
    <span class="nf nf-cod-symbol_enum"></span> ControlDataDefinedByType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/ControlDataDefinedByType>
    <span class="nf nf-cod-symbol_enum"></span> ControlType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/ControlType>
    <span class="nf nf-cod-symbol_enum"></span> DataTransferType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/DataTransferType>
    <span class="nf nf-cod-symbol_enum"></span> DecompositionType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/DecompositionType>
    <span class="nf nf-cod-symbol_enum"></span> DefeatureToleranceDefineBy</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/DefeatureToleranceDefineBy>
    <span class="nf nf-cod-symbol_enum"></span> FreeFaceMeshType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/FreeFaceMeshType>
    <span class="nf nf-cod-symbol_enum"></span> FreeVolumeMeshType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/FreeVolumeMeshType>
    <span class="nf nf-cod-symbol_enum"></span> HemisphereCenterDefinitionType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/HemisphereCenterDefinitionType>
    <span class="nf nf-cod-symbol_enum"></span> HemisphereOrientationDefinitionType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/HemisphereOrientationDefinitionType>
    <span class="nf nf-cod-symbol_enum"></span> MaterialPointDefineByType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/MaterialPointDefineByType>
    <span class="nf nf-cod-symbol_enum"></span> MaterialPointType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/MaterialPointType>
    <span class="nf nf-cod-symbol_enum"></span> MergeNodesToleranceType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/MergeNodesToleranceType>
    <span class="nf nf-cod-symbol_enum"></span> MeshFlowControl</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/MeshFlowControl>
    <span class="nf nf-cod-symbol_enum"></span> OperationType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/OperationType>
    <span class="nf nf-cod-symbol_enum"></span> OutcomeType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/OutcomeType>
    <span class="nf nf-cod-symbol_enum"></span> ScopeDefinedByType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/ScopeDefinedByType>
    <span class="nf nf-cod-symbol_enum"></span> ScopeType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/ScopeType>
    <span class="nf nf-cod-symbol_enum"></span> SettingsType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/SettingsType>
    <span class="nf nf-cod-symbol_enum"></span> SphereCenterDefinitionType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/SphereCenterDefinitionType>
    <span class="nf nf-cod-symbol_enum"></span> SurfaceMeshType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/SurfaceMeshType>
    <span class="nf nf-cod-symbol_enum"></span> TriangleCountReductionMode</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/TriangleCountReductionMode>
    <span class="nf nf-cod-symbol_enum"></span> VolumeMeshType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/VolumeMeshType>
    <span class="nf nf-cod-symbol_enum"></span> WorkflowType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/WorkflowType>
    <span class="nf nf-cod-symbol_enum"></span> WrapperRegionType</api/ansys/mechanical/stubs/v252/Ansys/Mechanical/DataModel/MechanicalEnums/MeshWorkflow/WrapperRegionType>








Description
-----------


MeshWorkflow module.
















..
    !! processed by numpydoc !!








.. vale on