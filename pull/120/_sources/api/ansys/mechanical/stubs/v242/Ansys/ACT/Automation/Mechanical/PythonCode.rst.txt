.. vale off



:class:`PythonCode`
===================

.. py:class:: ansys.mechanical.stubs.v242.Ansys.ACT.Automation.Mechanical.PythonCode

   Bases: :py:obj:`object`


   
   Defines a PythonCode.
















   ..
       !! processed by numpydoc !!


.. py:currentmodule:: PythonCode

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~Activate`
            - Activate the current object.
          * - :py:attr:`~Connect`
            - Register the python code.
          * - :py:attr:`~CopyTo`
            - Copies all visible properties from this object to another.
          * - :py:attr:`~CreateParameter`
            - Creates a new parameter for a Property.
          * - :py:attr:`~Delete`
            - Run the Delete action.
          * - :py:attr:`~Duplicate`
            - Duplicate method.
          * - :py:attr:`~GetParameter`
            - Gets the parameter corresponding to the given property.
          * - :py:attr:`~GroupAllSimilarChildren`
            - Run the GroupAllSimilarChildren action.
          * - :py:attr:`~GroupSimilarObjects`
            - Run the GroupSimilarObjects action.
          * - :py:attr:`~PropertyByAPIName`
            - Get a property by its API name.
          * - :py:attr:`~PropertyByName`
            - Get a property by its unique name.
          * - :py:attr:`~ReloadProperties`
            - Reload properties to update properties provided by the provider.
          * - :py:attr:`~RemoveParameter`
            - Removes the parameter from the parameter set corresponding to the given property.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~AllowRecursion`
            - Gets or Sets whether the PythonCode allows recursion.
          * - :py:attr:`~Connected`
            - Gets whether the callbacks are currently connected.
          * - :py:attr:`~DataModelObjectCategory`
            - Gets the current DataModelObject's category.
          * - :py:attr:`~InternalObject`
            - Gets the internal object. For advanced usage only.
          * - :py:attr:`~Properties`
            - Gets the list of properties for this object.
          * - :py:attr:`~PropertyProvider`
            - Gets or sets the propperty provider instance associated with this python code object.
          * - :py:attr:`~ScriptExecutionScope`
            - The scope identifier in which the code execution will take place.
          * - :py:attr:`~Text`
            - Gets or sets the text in the script tab for the Python Code object.
          * - :py:attr:`~VisibleProperties`
            - Gets the list of properties that are visible for this object.







Property detail
---------------
.. py:property:: AllowRecursion
   :type: Optional[bool]


   
   Gets or Sets whether the PythonCode allows recursion.
















   ..
       !! processed by numpydoc !!

.. py:property:: Connected
   :type: Optional[bool]


   
   Gets whether the callbacks are currently connected.
















   ..
       !! processed by numpydoc !!

.. py:property:: DataModelObjectCategory
   :type: Optional[Ansys.Mechanical.DataModel.Enums.DataModelObjectCategory]


   
   Gets the current DataModelObject's category.
















   ..
       !! processed by numpydoc !!

.. py:property:: InternalObject
   :type: Optional[Ansys.Common.Interop.DSObjectsAuto.IDSPythonCodeAuto]


   
   Gets the internal object. For advanced usage only.
















   ..
       !! processed by numpydoc !!

.. py:property:: Properties
   :type: Optional[tuple[Ansys.ACT.Automation.Mechanical.Property]]


   
   Gets the list of properties for this object.
















   ..
       !! processed by numpydoc !!

.. py:property:: PropertyProvider
   :type: Optional[Ansys.ACT.Interfaces.Mechanical.IPropertyProvider]


   
   Gets or sets the propperty provider instance associated with this python code object.
















   ..
       !! processed by numpydoc !!

.. py:property:: ScriptExecutionScope
   :type: Optional[str]


   
   The scope identifier in which the code execution will take place.
















   ..
       !! processed by numpydoc !!

.. py:property:: Text
   :type: Optional[str]


   
   Gets or sets the text in the script tab for the Python Code object.
















   ..
       !! processed by numpydoc !!

.. py:property:: VisibleProperties
   :type: Optional[tuple[Ansys.ACT.Automation.Mechanical.Property]]


   
   Gets the list of properties that are visible for this object.
















   ..
       !! processed by numpydoc !!





Method detail
-------------
.. py:method:: Activate() -> None

   
   Activate the current object.

   ..
       !! processed by numpydoc !!

.. py:method:: Connect() -> None

   
   Register the python code.

   ..
       !! processed by numpydoc !!

.. py:method:: CopyTo(other: Ansys.ACT.Automation.Mechanical.DataModelObject) -> None

   
   Copies all visible properties from this object to another.

   ..
       !! processed by numpydoc !!

.. py:method:: CreateParameter(propName: str) -> Ansys.ACT.Interfaces.Mechanical.IParameter

   
   Creates a new parameter for a Property.

   ..
       !! processed by numpydoc !!

.. py:method:: Delete() -> None

   
   Run the Delete action.

   ..
       !! processed by numpydoc !!

.. py:method:: Duplicate() -> Ansys.Mechanical.DataModel.Interfaces.IDataModelObject

   
   Duplicate method.

   ..
       !! processed by numpydoc !!

.. py:method:: GetParameter(propName: str) -> Ansys.ACT.Interfaces.Mechanical.IParameter

   
   Gets the parameter corresponding to the given property.

   ..
       !! processed by numpydoc !!

.. py:method:: GroupAllSimilarChildren() -> None

   
   Run the GroupAllSimilarChildren action.

   ..
       !! processed by numpydoc !!

.. py:method:: GroupSimilarObjects() -> Ansys.ACT.Automation.Mechanical.TreeGroupingFolder

   
   Run the GroupSimilarObjects action.

   ..
       !! processed by numpydoc !!

.. py:method:: PropertyByAPIName(name: str) -> Ansys.ACT.Automation.Mechanical.Property

.. code-block:: text

   Get a property by its API name.
   If multiple properties have the same API Name, only the first property with that name will be returned.

..
       !! processed by numpydoc !!

.. py:method:: PropertyByName(name: str) -> Ansys.ACT.Automation.Mechanical.Property

   
   Get a property by its unique name.

   ..
       !! processed by numpydoc !!

.. py:method:: ReloadProperties() -> None

   
   Reload properties to update properties provided by the provider.

   ..
       !! processed by numpydoc !!

.. py:method:: RemoveParameter(propName: str) -> None

   
   Removes the parameter from the parameter set corresponding to the given property.

   ..
       !! processed by numpydoc !!



.. vale on