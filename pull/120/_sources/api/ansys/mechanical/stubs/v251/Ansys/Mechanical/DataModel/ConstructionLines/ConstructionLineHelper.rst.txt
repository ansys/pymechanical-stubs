.. vale off



:class:`ConstructionLineHelper`
===============================

.. py:class:: ansys.mechanical.stubs.v251.Ansys.Mechanical.DataModel.ConstructionLines.ConstructionLineHelper

   Bases: :py:obj:`object`


   
   Helper to perform queries and modifications against a ConstructionLine instance.
















   ..
       !! processed by numpydoc !!










.. py:currentmodule:: ConstructionLineHelper

Overview
--------

.. tab-set::


   .. tab-item:: Constructors

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~ClearExistingDataAndImportFromXML`
            - Import global points and connecting edges from an XML file.
          * - :py:attr:`~ExportToXML`
            - Collect all the edges and edge vertices, then export them as global points to an XML file.
          * - :py:attr:`~GetContainedEdges`
            - Get all the edges that have both start and end edge vertices in the given plane.
          * - :py:attr:`~GetEdgeVerticesById`
            - GetEdgeVerticesById method.
          * - :py:attr:`~GetEdgesById`
            - GetEdgesById method.
          * - :py:attr:`~GetEdgesUsingPoint`
            - Get a list of IEdge that use the given Point.
          * - :py:attr:`~GetPlanesById`
            - GetPlanesById method.
          * - :py:attr:`~GetRelatedEdges`
            - Get all the edges that have only edge vertex in the given plane.













Method detail
-------------
.. py:method:: ClearExistingDataAndImportFromXML(constructionLine: Ansys.ACT.Automation.Mechanical.ConstructionLines.ConstructionLine, xmlFilePath: str) -> List[Any]
   :classmethod:


   
   Import global points and connecting edges from an XML file.

   ..
       !! processed by numpydoc !!

.. py:method:: ExportToXML(constructionLine: Ansys.ACT.Automation.Mechanical.ConstructionLines.ConstructionLine, xmlFilePath: str) -> None
   :classmethod:


   
   Collect all the edges and edge vertices, then export them as global points to an XML file.

   ..
       !! processed by numpydoc !!

.. py:method:: GetContainedEdges(plane: Ansys.Mechanical.DataModel.ConstructionLines.Plane) -> List[Any]
   :classmethod:


   
   Get all the edges that have both start and end edge vertices in the given plane.

   ..
       !! processed by numpydoc !!

.. py:method:: GetEdgeVerticesById(constructionLine: Ansys.ACT.Automation.Mechanical.ConstructionLines.ConstructionLine, edgeVertexIdCollection: Iterable[int]) -> List[Any]
   :classmethod:


   
   GetEdgeVerticesById method.

   ..
       !! processed by numpydoc !!

.. py:method:: GetEdgesById(constructionLine: Ansys.ACT.Automation.Mechanical.ConstructionLines.ConstructionLine, edgeIdCollection: Iterable[int]) -> List[Any]
   :classmethod:


   
   GetEdgesById method.

   ..
       !! processed by numpydoc !!

.. py:method:: GetEdgesUsingPoint(point: Ansys.Mechanical.DataModel.ConstructionLines.Point) -> List[Any]
   :classmethod:


   
   Get a list of IEdge that use the given Point.

   ..
       !! processed by numpydoc !!

.. py:method:: GetPlanesById(constructionLine: Ansys.ACT.Automation.Mechanical.ConstructionLines.ConstructionLine, planeIdCollection: Iterable[int]) -> List[Any]
   :classmethod:


   
   GetPlanesById method.

   ..
       !! processed by numpydoc !!

.. py:method:: GetRelatedEdges(plane: Ansys.Mechanical.DataModel.ConstructionLines.Plane) -> List[Any]
   :classmethod:


   
   Get all the edges that have only edge vertex in the given plane.

   ..
       !! processed by numpydoc !!



.. vale on