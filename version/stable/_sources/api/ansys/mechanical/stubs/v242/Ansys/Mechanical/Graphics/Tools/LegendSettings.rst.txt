.. vale off



:class:`LegendSettings`
=======================

.. py:class:: ansys.mechanical.stubs.v242.Ansys.Mechanical.Graphics.Tools.LegendSettings

   Bases: :py:obj:`object`


   
   Represents a LegendSettings object. This object holds properties of the Standalone LegendSettings.
















   ..
       !! processed by numpydoc !!


.. py:currentmodule:: LegendSettings

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~GetBandColor`
            - Gets the color of the specified band.
          * - :py:attr:`~GetBandColorAuto`
            - Gets whether the specified band is set to Automatic or not.
          * - :py:attr:`~GetLowerBandValueAuto`
            - Gets whether the lower specified band value is set to Automatic or not.
          * - :py:attr:`~GetLowerBound`
            - Gets lower bound value of the specified band.
          * - :py:attr:`~GetUpperBandValueAuto`
            - Gets whether the specified upper band value is set to Automatic or not.
          * - :py:attr:`~GetUpperBound`
            - Gets upper bound value of the specified band.
          * - :py:attr:`~Reset`
            - Resets all legend customizations into default values.
          * - :py:attr:`~ResetColors`
            - Resets all colors to default values.
          * - :py:attr:`~SetBandColor`
            - Sets the color of the specified band.
          * - :py:attr:`~SetBandColorAuto`
            - Sets the specified band to Automatic.
          * - :py:attr:`~SetLowerBound`
            - Sets lower bound value of the specified band.
          * - :py:attr:`~SetUpperBound`
            - Sets upper bound value of the specified band.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~AllScientificNotation`
            - Whether the result values are displayed in scientific notation.
          * - :py:attr:`~ColorScheme`
            - Color Scheme for the legend.
          * - :py:attr:`~Digits`
            - Number of significant digits (min:2 , max:8).
          * - :py:attr:`~HighFidelity`
            - Whether to replot and improve the synchronization of the result values.
          * - :py:attr:`~LogarithmicScale`
            - Whether the result values are distributed in a Logarithmic scale.
          * - :py:attr:`~NumberOfBands`
            - Number of bands on the legend (min:3, max:30). Bands are added/removed from the top of the legend.
          * - :py:attr:`~SemiTransparency`
            - Whether the legend is semi-transparent.
          * - :py:attr:`~Unit`
            - The unit for the legend.







Property detail
---------------
.. py:property:: AllScientificNotation
   :type: Optional[bool]

   
   Whether the result values are displayed in scientific notation.
















   ..
       !! processed by numpydoc !!

.. py:property:: ColorScheme
   :type: Optional[Ansys.Mechanical.DataModel.Enums.LegendColorSchemeType]

   
   Color Scheme for the legend.
















   ..
       !! processed by numpydoc !!

.. py:property:: Digits
   :type: Optional[int]

   
   Number of significant digits (min:2 , max:8).
















   ..
       !! processed by numpydoc !!

.. py:property:: HighFidelity
   :type: Optional[bool]

   
   Whether to replot and improve the synchronization of the result values.
















   ..
       !! processed by numpydoc !!

.. py:property:: LogarithmicScale
   :type: Optional[bool]

   
   Whether the result values are distributed in a Logarithmic scale.
















   ..
       !! processed by numpydoc !!

.. py:property:: NumberOfBands
   :type: Optional[int]

   
   Number of bands on the legend (min:3, max:30). Bands are added/removed from the top of the legend.
















   ..
       !! processed by numpydoc !!

.. py:property:: SemiTransparency
   :type: Optional[bool]

   
   Whether the legend is semi-transparent.
















   ..
       !! processed by numpydoc !!

.. py:property:: Unit
   :type: Optional[str]

   
   The unit for the legend.
















   ..
       !! processed by numpydoc !!





Method detail
-------------
.. py:method:: GetBandColor(index: int) -> int

   
   Gets the color of the specified band.

   ..
       !! processed by numpydoc !!

.. py:method:: GetBandColorAuto(index: int) -> bool

   
   Gets whether the specified band is set to Automatic or not.

   ..
       !! processed by numpydoc !!

.. py:method:: GetLowerBandValueAuto(index: int) -> bool

   
   Gets whether the lower specified band value is set to Automatic or not.

   ..
       !! processed by numpydoc !!

.. py:method:: GetLowerBound(index: int) -> Ansys.Core.Units.Quantity

   
   Gets lower bound value of the specified band.

   ..
       !! processed by numpydoc !!

.. py:method:: GetUpperBandValueAuto(index: int) -> bool

   
   Gets whether the specified upper band value is set to Automatic or not.

   ..
       !! processed by numpydoc !!

.. py:method:: GetUpperBound(index: int) -> Ansys.Core.Units.Quantity

   
   Gets upper bound value of the specified band.

   ..
       !! processed by numpydoc !!

.. py:method:: Reset() -> None

   
   Resets all legend customizations into default values.

   ..
       !! processed by numpydoc !!

.. py:method:: ResetColors() -> None

   
   Resets all colors to default values.

   ..
       !! processed by numpydoc !!

.. py:method:: SetBandColor(index: int, colorValue: int) -> None

   
   Sets the color of the specified band.

   ..
       !! processed by numpydoc !!

.. py:method:: SetBandColorAuto(index: int, val: bool) -> None

   
   Sets the specified band to Automatic.

   ..
       !! processed by numpydoc !!

.. py:method:: SetLowerBound(index: int, value: Ansys.Core.Units.Quantity) -> None

   
   Sets lower bound value of the specified band.

   ..
       !! processed by numpydoc !!

.. py:method:: SetUpperBound(index: int, value: Ansys.Core.Units.Quantity) -> None

   
   Sets upper bound value of the specified band.

   ..
       !! processed by numpydoc !!



.. vale on