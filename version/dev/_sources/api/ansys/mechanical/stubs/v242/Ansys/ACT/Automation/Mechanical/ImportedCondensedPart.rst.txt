.. vale off



:class:`ImportedCondensedPart`
==============================

.. py:class:: ansys.mechanical.stubs.v242.Ansys.ACT.Automation.Mechanical.ImportedCondensedPart

   Bases: :py:obj:`object`


   
   Defines a ImportedCondensedPart.
















   ..
       !! processed by numpydoc !!


.. py:currentmodule:: ImportedCondensedPart

Overview
--------

.. tab-set::



   .. tab-item:: Methods

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~Activate`
            - Activate the current object.
          * - :py:attr:`~AddCommandSnippet`
            - Creates a new CommandSnippet
          * - :py:attr:`~AddComment`
            - Creates a new child Comment.
          * - :py:attr:`~AddFigure`
            - Creates a new child Figure.
          * - :py:attr:`~AddImage`
            - Creates a new child Image.
          * - :py:attr:`~ClearGeneratedData`
            - Run the ClearGeneratedData action.
          * - :py:attr:`~CopyTo`
            - Copies all visible properties from this object to another.
          * - :py:attr:`~CreateJointFromNodeIds`
            - CreateJointFromNodeIds method.
          * - :py:attr:`~CreateJoints`
            - CreateJoints method.
          * - :py:attr:`~CreateNodalNamedSelectionFromNodeIds`
            - CreateNodalNamedSelectionFromNodeIds method.
          * - :py:attr:`~CreateNodalNamedSelections`
            - CreateNodalNamedSelections method.
          * - :py:attr:`~CreateParameter`
            - Creates a new parameter for a Property.
          * - :py:attr:`~CreateRemotePointFromNodeIds`
            - CreateRemotePointFromNodeIds method.
          * - :py:attr:`~CreateRemotePoints`
            - CreateRemotePoints method.
          * - :py:attr:`~Delete`
            - Run the Delete action.
          * - :py:attr:`~Duplicate`
            - Creates a copy of the current DataModelObject.
          * - :py:attr:`~GetChildren`
            - Gets the list of children, filtered by type.
          * - :py:attr:`~GetOriginalNodeCoordinates`
            - Get all the Node Locations of the Original Interfaces Data table.
          * - :py:attr:`~GetParameter`
            - Gets the parameter corresponding to the given property.
          * - :py:attr:`~GetTransformedNodeCoordinates`
            - Get all the Node Locations of the Transformed Interfaces Data table.
          * - :py:attr:`~GroupAllSimilarChildren`
            - Run the GroupAllSimilarChildren action.
          * - :py:attr:`~GroupSimilarObjects`
            - Run the GroupSimilarObjects action.
          * - :py:attr:`~ImportCondensedPart`
            - Run the Import Condensed Part action.
          * - :py:attr:`~PropertyByAPIName`
            - Get a property by its API name.
          * - :py:attr:`~PropertyByName`
            - Get a property by its unique name.
          * - :py:attr:`~ReadInterfaceData`
            - Run the Read Interface Data action.
          * - :py:attr:`~RemoveParameter`
            - Removes the parameter from the parameter set corresponding to the given property.
          * - :py:attr:`~UpdateNodeLocation`
            - Update Node Location of Original Interfaces Data view table.


   .. tab-item:: Properties

      .. list-table::
          :header-rows: 0
          :widths: auto

          * - :py:attr:`~ActualNodeOffset`
            - Gets the ActualNodeOffset.
          * - :py:attr:`~Children`
            - Gets the list of children.
          * - :py:attr:`~Comments`
            - Gets the list of associated comments.
          * - :py:attr:`~CondensedPartFileName`
            - Gets or sets the CondensedPartFileName.
          * - :py:attr:`~CondensedPartUnitSystem`
            - Gets or sets the CondensedPartUnitSystem.
          * - :py:attr:`~CoordinateSystem`
            - Gets or sets the CoordinateSystem.
          * - :py:attr:`~DataModelObjectCategory`
            - Gets the current DataModelObject's category.
          * - :py:attr:`~ExpansionStatus`
            - "ExpansionStatus" property defines if results can be expanded of the imported condensed part or not.
          * - :py:attr:`~Figures`
            - Gets the list of associated figures.
          * - :py:attr:`~FutureIntent`
            - "FutureIntent" property defines the type of solver supported to perform a use pass with the imported condensed part.
          * - :py:attr:`~GeometrySelection`
            - Gets or sets the GeometrySelection.
          * - :py:attr:`~Images`
            - Gets the list of associated images.
          * - :py:attr:`~ImportFileFormat`
            - Gets or sets the ImportFileFormat.
          * - :py:attr:`~ImportStatus`
            - Gets the ImportStatus.
          * - :py:attr:`~InternalObject`
            - Gets the internal object. For advanced usage only.
          * - :py:attr:`~NodeOffset`
            - Gets or sets the NodeOffset.
          * - :py:attr:`~NumberInterfaceEntries`
            - Gets the NumberInterfaceEntries.
          * - :py:attr:`~NumberMasterNodes`
            - Gets the NumberMasterNodes.
          * - :py:attr:`~Physics`
            - Gets the Physics.
          * - :py:attr:`~Properties`
            - Gets the list of properties for this object.
          * - :py:attr:`~ReferenceTemperature`
            - Gets or sets the ReferenceTemperature.
          * - :py:attr:`~SolutionName`
            - Gets or sets the SolutionName.
          * - :py:attr:`~SolutionNameMode`
            - Gets or sets the SolutionNameMode.
          * - :py:attr:`~SolverFilesDirectory`
            - Gets the SolverFilesDirectory.
          * - :py:attr:`~SolverUnitSystem`
            - Gets or sets the SolverUnitSystem.
          * - :py:attr:`~SolverUnits`
            - Gets or sets the SolverUnits.
          * - :py:attr:`~Suppressed`
            - Gets or sets the Suppressed.
          * - :py:attr:`~TemperatureUnits`
            - Gets the TemperatureUnits.
          * - :py:attr:`~VisibleProperties`
            - Gets the list of properties that are visible for this object.







Property detail
---------------
.. py:property:: ActualNodeOffset
   :type: Optional[int]

   
   Gets the ActualNodeOffset.
















   ..
       !! processed by numpydoc !!

.. py:property:: Children
   :type: Optional[List[Ansys.Mechanical.DataModel.Interfaces.IDataModelObject]]

   
   Gets the list of children.
















   ..
       !! processed by numpydoc !!

.. py:property:: Comments
   :type: Optional[Iterable[Ansys.ACT.Automation.Mechanical.Comment]]

   
   Gets the list of associated comments.
















   ..
       !! processed by numpydoc !!

.. py:property:: CondensedPartFileName
   :type: Optional[str]

   
   Gets or sets the CondensedPartFileName.
















   ..
       !! processed by numpydoc !!

.. py:property:: CondensedPartUnitSystem
   :type: Optional[Ansys.Mechanical.DataModel.Enums.WBUnitSystemType]

   
   Gets or sets the CondensedPartUnitSystem.
















   ..
       !! processed by numpydoc !!

.. py:property:: CoordinateSystem
   :type: Optional[Ansys.ACT.Automation.Mechanical.CoordinateSystem]

   
   Gets or sets the CoordinateSystem.
















   ..
       !! processed by numpydoc !!

.. py:property:: DataModelObjectCategory
   :type: Optional[Ansys.Mechanical.DataModel.Enums.DataModelObjectCategory]

   
   Gets the current DataModelObject's category.
















   ..
       !! processed by numpydoc !!

.. py:property:: ExpansionStatus
   :type: Optional[Ansys.Mechanical.DataModel.Enums.ExpansionStatus]

   
   "ExpansionStatus" property defines if results can be expanded of the imported condensed part or not.
















   ..
       !! processed by numpydoc !!

.. py:property:: Figures
   :type: Optional[Iterable[Ansys.ACT.Automation.Mechanical.Figure]]

   
   Gets the list of associated figures.
















   ..
       !! processed by numpydoc !!

.. py:property:: FutureIntent
   :type: Optional[Ansys.Mechanical.DataModel.Enums.FutureIntentType]

   
   "FutureIntent" property defines the type of solver supported to perform a use pass with the imported condensed part.
















   ..
       !! processed by numpydoc !!

.. py:property:: GeometrySelection
   :type: Optional[Ansys.ACT.Interfaces.Common.ISelectionInfo]

   
   Gets or sets the GeometrySelection.
















   ..
       !! processed by numpydoc !!

.. py:property:: Images
   :type: Optional[Iterable[Ansys.ACT.Automation.Mechanical.Image]]

   
   Gets the list of associated images.
















   ..
       !! processed by numpydoc !!

.. py:property:: ImportFileFormat
   :type: Optional[Ansys.Mechanical.DataModel.Enums.CondensedPartFileFormat]

   
   Gets or sets the ImportFileFormat.
















   ..
       !! processed by numpydoc !!

.. py:property:: ImportStatus
   :type: Optional[Ansys.Mechanical.DataModel.Enums.ImportedCondensedPartStatus]

   
   Gets the ImportStatus.
















   ..
       !! processed by numpydoc !!

.. py:property:: InternalObject
   :type: Optional[Ansys.Common.Interop.DSObjectsAuto.IDSCondensedPartAuto]

   
   Gets the internal object. For advanced usage only.
















   ..
       !! processed by numpydoc !!

.. py:property:: NodeOffset
   :type: Optional[int]

   
   Gets or sets the NodeOffset.
















   ..
       !! processed by numpydoc !!

.. py:property:: NumberInterfaceEntries
   :type: Optional[int]

   
   Gets the NumberInterfaceEntries.
















   ..
       !! processed by numpydoc !!

.. py:property:: NumberMasterNodes
   :type: Optional[int]

   
   Gets the NumberMasterNodes.
















   ..
       !! processed by numpydoc !!

.. py:property:: Physics
   :type: Optional[Ansys.Mechanical.DataModel.Enums.CondensedPartPhysics]

   
   Gets the Physics.
















   ..
       !! processed by numpydoc !!

.. py:property:: Properties
   :type: Optional[tuple[Ansys.ACT.Automation.Mechanical.Property]]

   
   Gets the list of properties for this object.
















   ..
       !! processed by numpydoc !!

.. py:property:: ReferenceTemperature
   :type: Optional[Ansys.Core.Units.Quantity]

   
   Gets or sets the ReferenceTemperature.
















   ..
       !! processed by numpydoc !!

.. py:property:: SolutionName
   :type: Optional[str]

   
   Gets or sets the SolutionName.
















   ..
       !! processed by numpydoc !!

.. py:property:: SolutionNameMode
   :type: Optional[Ansys.Mechanical.DataModel.Enums.AutomaticOrManual]

   
   Gets or sets the SolutionNameMode.
















   ..
       !! processed by numpydoc !!

.. py:property:: SolverFilesDirectory
   :type: Optional[str]

   
   Gets the SolverFilesDirectory.
















   ..
       !! processed by numpydoc !!

.. py:property:: SolverUnitSystem
   :type: Optional[Ansys.Mechanical.DataModel.Enums.WBUnitSystemType]

   
   Gets or sets the SolverUnitSystem.
















   ..
       !! processed by numpydoc !!

.. py:property:: SolverUnits
   :type: Optional[Ansys.Mechanical.DataModel.Enums.SolverUnitsControlType]

   
   Gets or sets the SolverUnits.
















   ..
       !! processed by numpydoc !!

.. py:property:: Suppressed
   :type: Optional[bool]

   
   Gets or sets the Suppressed.
















   ..
       !! processed by numpydoc !!

.. py:property:: TemperatureUnits
   :type: Optional[str]

   
   Gets the TemperatureUnits.
















   ..
       !! processed by numpydoc !!

.. py:property:: VisibleProperties
   :type: Optional[tuple[Ansys.ACT.Automation.Mechanical.Property]]

   
   Gets the list of properties that are visible for this object.
















   ..
       !! processed by numpydoc !!





Method detail
-------------
.. py:method:: Activate() -> None

   
   Activate the current object.

   ..
       !! processed by numpydoc !!

.. py:method:: AddCommandSnippet() -> Ansys.ACT.Automation.Mechanical.CommandSnippet

   
   Creates a new CommandSnippet

   ..
       !! processed by numpydoc !!

.. py:method:: AddComment() -> Ansys.ACT.Automation.Mechanical.Comment

   
   Creates a new child Comment.

   ..
       !! processed by numpydoc !!

.. py:method:: AddFigure() -> Ansys.ACT.Automation.Mechanical.Figure

   
   Creates a new child Figure.

   ..
       !! processed by numpydoc !!

.. py:method:: AddImage(filePath: str) -> Ansys.ACT.Automation.Mechanical.Image

.. code-block:: text

   Creates a new child Image.
   If a filePath is provided, the image will be loaded from that file,
   if not, the image will be a screen capture of the Geometry window.

..
       !! processed by numpydoc !!

.. py:method:: ClearGeneratedData() -> None

   
   Run the ClearGeneratedData action.

   ..
       !! processed by numpydoc !!

.. py:method:: CopyTo(other: Ansys.ACT.Automation.Mechanical.DataModelObject) -> None

   
   Copies all visible properties from this object to another.

   ..
       !! processed by numpydoc !!

.. py:method:: CreateJointFromNodeIds(selectedNodeIds: Iterable[int]) -> Ansys.ACT.Automation.Mechanical.DataModelObject

   
   CreateJointFromNodeIds method.

   ..
       !! processed by numpydoc !!

.. py:method:: CreateJoints(selectedInterfaceIDNumbers: Iterable[int]) -> Iterable[Ansys.ACT.Automation.Mechanical.DataModelObject]

   
   CreateJoints method.

   ..
       !! processed by numpydoc !!

.. py:method:: CreateNodalNamedSelectionFromNodeIds(selectedNodeIds: Iterable[int]) -> Ansys.ACT.Automation.Mechanical.DataModelObject

   
   CreateNodalNamedSelectionFromNodeIds method.

   ..
       !! processed by numpydoc !!

.. py:method:: CreateNodalNamedSelections(selectedInterfaceIDNumbers: Iterable[int]) -> Iterable[Ansys.ACT.Automation.Mechanical.DataModelObject]

   
   CreateNodalNamedSelections method.

   ..
       !! processed by numpydoc !!

.. py:method:: CreateParameter(propName: str) -> Ansys.ACT.Interfaces.Mechanical.IParameter

   
   Creates a new parameter for a Property.

   ..
       !! processed by numpydoc !!

.. py:method:: CreateRemotePointFromNodeIds(selectedNodeIds: Iterable[int]) -> Ansys.ACT.Automation.Mechanical.DataModelObject

   
   CreateRemotePointFromNodeIds method.

   ..
       !! processed by numpydoc !!

.. py:method:: CreateRemotePoints(selectedInterfaceIDNumbers: Iterable[int]) -> Iterable[Ansys.ACT.Automation.Mechanical.DataModelObject]

   
   CreateRemotePoints method.

   ..
       !! processed by numpydoc !!

.. py:method:: Delete() -> None

   
   Run the Delete action.

   ..
       !! processed by numpydoc !!

.. py:method:: Duplicate() -> Ansys.Mechanical.DataModel.Interfaces.IDataModelObject

   
   Creates a copy of the current DataModelObject.

   ..
       !! processed by numpydoc !!

.. py:method:: GetChildren(recurses: bool, children: List[ChildrenType]) -> List[ChildrenType]

   
   Gets the list of children, filtered by type.

   ..
       !! processed by numpydoc !!

.. py:method:: GetOriginalNodeCoordinates() -> Iterable[dict[int, Iterable[Ansys.Core.Units.Quantity]]]

   
   Get all the Node Locations of the Original Interfaces Data table.

   ..
       !! processed by numpydoc !!

.. py:method:: GetParameter(propName: str) -> Ansys.ACT.Interfaces.Mechanical.IParameter

   
   Gets the parameter corresponding to the given property.

   ..
       !! processed by numpydoc !!

.. py:method:: GetTransformedNodeCoordinates() -> Iterable[dict[int, Iterable[Ansys.Core.Units.Quantity]]]

   
   Get all the Node Locations of the Transformed Interfaces Data table.

   ..
       !! processed by numpydoc !!

.. py:method:: GroupAllSimilarChildren() -> None

   
   Run the GroupAllSimilarChildren action.

   ..
       !! processed by numpydoc !!

.. py:method:: GroupSimilarObjects() -> Ansys.ACT.Automation.Mechanical.TreeGroupingFolder

   
   Run the GroupSimilarObjects action.

   ..
       !! processed by numpydoc !!

.. py:method:: ImportCondensedPart() -> None

   
   Run the Import Condensed Part action.

   ..
       !! processed by numpydoc !!

.. py:method:: PropertyByAPIName(name: str) -> Ansys.ACT.Automation.Mechanical.Property

.. code-block:: text

   Get a property by its API name.
   If multiple properties have the same API Name, only the first property with that name will be returned.

..
       !! processed by numpydoc !!

.. py:method:: PropertyByName(name: str) -> Ansys.ACT.Automation.Mechanical.Property

   
   Get a property by its unique name.

   ..
       !! processed by numpydoc !!

.. py:method:: ReadInterfaceData() -> None

   
   Run the Read Interface Data action.

   ..
       !! processed by numpydoc !!

.. py:method:: RemoveParameter(propName: str) -> None

   
   Removes the parameter from the parameter set corresponding to the given property.

   ..
       !! processed by numpydoc !!

.. py:method:: UpdateNodeLocation(iNodeID: int, locX: Ansys.Core.Units.Quantity, locY: Ansys.Core.Units.Quantity, locZ: Ansys.Core.Units.Quantity, rotX: Ansys.Core.Units.Quantity, rotY: Ansys.Core.Units.Quantity, rotZ: Ansys.Core.Units.Quantity) -> None

   
   Update Node Location of Original Interfaces Data view table.

   ..
       !! processed by numpydoc !!



.. vale on